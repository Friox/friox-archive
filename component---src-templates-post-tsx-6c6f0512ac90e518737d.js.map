{"version":3,"file":"component---src-templates-post-tsx-6c6f0512ac90e518737d.js","mappings":"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","sources":["webpack://gatsby-starter-friox/./node_modules/@chakra-ui/react/dist/esm/components/separator/separator.js","webpack://gatsby-starter-friox/./src/components/PostLayout/PostHeader.tsx","webpack://gatsby-starter-friox/./node_modules/@chakra-ui/react/dist/esm/components/show/show.js","webpack://gatsby-starter-friox/./src/components/PostLayout/SeriesIndexList.tsx","webpack://gatsby-starter-friox/./src/components/PostLayout/TOC.tsx","webpack://gatsby-starter-friox/./node_modules/@giscus/react/dist/index.js","webpack://gatsby-starter-friox/./src/components/PostLayout/GiscusWidget.tsx","webpack://gatsby-starter-friox/./src/components/PostLayout/index.tsx","webpack://gatsby-starter-friox/./src/hooks/useScrollSpy.ts","webpack://gatsby-starter-friox/./src/templates/Post.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createRecipeContext } from '../../styled-system/create-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { cx } from '../../utils/cx.js';\nimport { isString } from '../../utils/is.js';\nimport { omit } from '../../utils/omit.js';\n\nconst { useRecipeResult, PropsProvider } = createRecipeContext({\n  key: \"separator\"\n});\nconst Separator = forwardRef(\n  function Separator2(props, ref) {\n    const { styles, className, props: otherProps } = useRecipeResult(props);\n    const orientation = props.orientation || \"horizontal\";\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: isString(orientation) ? \"separator\" : \"presentation\",\n        \"aria-orientation\": isString(orientation) ? orientation : void 0,\n        ...omit(otherProps, [\"orientation\"]),\n        className: cx(className, props.className),\n        css: [styles, props.css]\n      }\n    );\n  }\n);\nconst SeparatorPropsProvider = PropsProvider;\n\nexport { Separator, SeparatorPropsProvider };\n","import React from 'react'\nimport { Box, Heading, SystemStyleObject, Text, Stack } from '@chakra-ui/react'\n\nconst postTitleStyle: SystemStyleObject = {\n  fontSize: '3xl',\n  wordBreak: 'keep-all',\n  marginTop: '18px',\n  lineHeight: 'short',\n  md: {\n    fontSize: '4xl',\n    lineHeight: 'shorter'\n  }\n}\n\nconst postDateStyle: SystemStyleObject = {\n  fontSize: 'sm',\n  marginTop: '18px',\n  color: 'fg.muted',\n  md: {\n    fontSize: 'md'\n  }\n}\n\ntype Props = { frontmatter: NonNullable<Queries.BlogPostPageQuery['post']>['frontmatter'] }\nconst PostHeader: React.FC<Props> = ({ frontmatter: fm }) => {\n  return (\n    <Box>\n      <Text fontWeight='bold' color='teal.solid'>{fm.category}</Text>\n      <Heading css={postTitleStyle}>{fm.title}</Heading>\n      <Stack css={postDateStyle} direction='row'>\n        <Text>{fm.createAt}</Text>\n        {fm.updateAt && (<Text>(편집됨: {fm.updateAt})</Text>)}\n      </Stack>\n    </Box>\n  )\n}\n\nexport default PostHeader","\"use strict\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { isValidElement } from 'react';\n\nfunction Show(props) {\n  const { when, fallback, children } = props;\n  let result;\n  if (!when) {\n    result = fallback;\n  } else {\n    result = typeof children === \"function\" ? children(when) : children;\n  }\n  return isValidElement(result) ? result : /* @__PURE__ */ jsx(Fragment, { children: result });\n}\n\nexport { Show };\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { Text, Stack, Icon, SystemStyleObject, HStack, IconButton, Show } from '@chakra-ui/react'\nimport { FaAngleDoubleRight } from 'react-icons/fa'\nimport { calculatePaginatedPosts } from '@/utils/pagination'\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\n\nconst wrapperStyle: SystemStyleObject = {\n  border: '1px solid',\n  borderColor: 'border',\n  padding: '12px',\n  fontSize: 'sm',\n  lineHeight: 1,\n  md: {\n    fontSize: 'md'\n  }\n}\n\nconst seriesTitleStyle: SystemStyleObject = {\n  fontWeight: 'bold',\n  backgroundColor: 'bg.inverted',\n  color: 'fg.inverted',\n  width: 'fit-content',\n  padding: '4px 6px'\n}\n\nconst seriesLinkStyle: SystemStyleObject = {\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  display: 'inline-block',\n  cursor: 'pointer',\n  transition: 'color 0.1s linear',\n  _hover: {\n    color: 'fg'\n  }\n}\n\ntype Props = {\n  fm: NonNullable<Queries.BlogPostPageQuery['post']>['frontmatter']\n  seriesList: Queries.BlogPostPageQuery['seriesList']\n}\n\nconst SeriesIndexList: React.FC<Props> = ({ fm, seriesList }) => {\n\n  const pageSize = 5\n  const allPage = Math.ceil(seriesList.nodes.length / pageSize)\n  const [ page, setPage ] = useState(1)\n\n  const paginatedPosts = useMemo(() => calculatePaginatedPosts([...seriesList.nodes], page, pageSize), [seriesList, page])\n\n  useEffect(() => {\n    for (let i = 0; i < seriesList.nodes.length; i++) {\n      if (fm.slug == seriesList.nodes[i].frontmatter.slug) {\n        setPage(Math.floor(i / pageSize) + 1)\n        break\n      }\n    }\n  }, [])\n\n  return (\n    <Stack css={wrapperStyle} gap='3'>\n      <Text css={seriesTitleStyle}>Series: {fm.series}</Text>\n      {paginatedPosts.map(series => (\n        <Stack key={series.frontmatter.slug} direction='row' alignItems='center'>\n          <Icon as={FaAngleDoubleRight} color={fm.title == series.frontmatter.title ? 'teal.solid' : 'bg.emphasized'} />\n          <Text\n            css={seriesLinkStyle}\n            color={fm.title == series.frontmatter.title ? 'fg' : 'fg.subtle'}\n            onClick={fm.title != series.frontmatter.title ? () => location.href = `/post/${series.frontmatter.slug}` : () => {}}\n          >{series.frontmatter.title}</Text>\n        </Stack>\n      ))}\n      <Show when={ allPage > 1 }>\n        <HStack justifyContent='end'>\n          <Text color='fg.muted' fontSize='xs' md={{ fontSize: 'sm' }}>{page} / {allPage}</Text>\n          <IconButton size='xs' rounded='full' variant='outline' onClick={() => setPage(page - 1 < 1 ? 1 : page - 1)}>\n            <FaArrowLeft />\n          </IconButton>\n          <IconButton size='xs' rounded='full' variant='outline' onClick={() => setPage(page + 1 > allPage ? allPage : page + 1)}>\n            <FaArrowRight />\n          </IconButton>\n        </HStack>\n      </Show>\n    </Stack>\n  )\n}\n\nexport default SeriesIndexList","import React from 'react'\nimport { Box, Text, SystemStyleObject } from '@chakra-ui/react'\n\nconst tocWrapperStyle: SystemStyleObject = {\n  position: 'absolute',\n  height: '100%',\n  left: '100%',\n  marginLeft: '48px'\n}\n\nconst tocStyle: SystemStyleObject = {\n  whiteSpace: 'nowrap',\n  \"& ul\": {\n    paddingInlineStart: 0,\n    marginBlockStart: 0\n  },\n  \"& li\": {\n    marginLeft: '24px',\n  },\n  \"& a\": {\n    lineHeight: '1.8',\n    color: 'fg.subtle',\n    transition: 'color 0.1s linear',\n    fontSize: 'sm'\n  },\n  \"& a:hover\": {\n    color: 'fg'\n  },\n  \"& a.visible\": {\n    color: 'fg'\n  }\n}\n\ntype Props = { toc: NonNullable<NonNullable<Queries.BlogPostPageQuery['post']>['tableOfContents']>}\nconst TOC: React.FC<Props> = ({ toc }) => {\n  return (\n    <Box css={tocWrapperStyle} hideBelow='xl'>\n      <Box position='sticky' top='110px'>\n        <Box>\n          <Text marginLeft='24px'>목차</Text>\n        </Box>\n        <Box id='toc-wrapper' css={tocStyle} dangerouslySetInnerHTML={{__html: toc}} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default TOC","import { jsx as b } from \"react/jsx-runtime\";\nimport { useState as h, useEffect as j } from \"react\";\nfunction y({ id: e, host: i, repo: o, repoId: r, category: n, categoryId: u, mapping: s, term: a, strict: d, reactionsEnabled: f, emitMetadata: m, inputPosition: c, theme: p, lang: l, loading: g }) {\n  const [t, x] = h(!1);\n  return j(() => {\n    t || import(\"./giscus-Ci9LqPcC.js\").then(() => x(!0));\n  }, []), t ? b(\"giscus-widget\", { id: e, host: i, repo: o, repoid: r, category: n, categoryid: u, mapping: s, term: a, strict: d, reactionsenabled: f, emitmetadata: m, inputposition: c, theme: p, lang: l, loading: g }) : null;\n}\nexport {\n  y as default\n};\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport { useColorMode } from '../ui/color-mode'\nimport Giscus from '@giscus/react'\n\nconst GiscusWidget = () => {\n  const { colorMode } = useColorMode()\n  return (\n    <Box>\n      <Giscus\n        repo=\"Friox/friox-archive\"\n        repoId=\"R_kgDOORNENA\"\n        category=\"Comments\"\n        categoryId=\"DIC_kwDOORNENM4ConHm\"\n        mapping=\"pathname\"\n        strict=\"0\"\n        reactionsEnabled=\"1\"\n        emitMetadata=\"0\"\n        inputPosition=\"top\"\n        theme={colorMode}\n        lang=\"ko\"\n        loading=\"eager\"\n      />\n      <Box className='giscus'/>\n    </Box>\n  )\n}\n\nexport default GiscusWidget","import React from 'react'\nimport { Separator, Box } from '@chakra-ui/react'\nimport { usePostScrollSpy } from '@/hooks/useScrollSpy'\nimport Profile from '@/components/Profile'\nimport MarkdownStyle from '@/components/MarkdownStyle'\nimport PostHeader from './PostHeader'\nimport SeriesIndexList from './SeriesIndexList'\nimport TOC from './TOC'\nimport GiscusWidget from './GiscusWidget'\n\ntype Props = { post: Queries.BlogPostPageQuery }\nconst PostLayout: React.FC<Props> = ({ post: data }) => {\n  const { post, seriesList } = data\n  if (!post) return(<></>)\n  const { html, frontmatter, tableOfContents } = post\n  usePostScrollSpy()\n  return (\n    <Box >\n      <PostHeader frontmatter={frontmatter} />\n      <Separator marginY='18px'/>\n      {frontmatter.series && <SeriesIndexList fm={frontmatter} seriesList={seriesList}/>}\n      <Box id='post-wrapper' position='relative'>\n        {tableOfContents && (<TOC toc={tableOfContents}/>)}\n        <MarkdownStyle dangerouslySetInnerHTML={{__html: html!}}></MarkdownStyle>\n      </Box>\n      <Separator marginY='36px'/>\n      <Profile />\n      <Separator marginY='36px'/>\n      <GiscusWidget />\n    </Box>\n  )\n}\n\nexport default PostLayout","import { useEffect } from \"react\"\n\ninterface PostScrollSpyOptions {\n  onVisibilityChange?: (visibleIndexes: boolean[]) => void\n}\n\nconst escapeID = (str: string) => {\n  return str.replace(/^#(\\d)/, '#\\\\3$1 ')\n}\n\nexport const usePostScrollSpy = (options?: PostScrollSpyOptions) => {\n  useEffect(() => {\n    const cleanupFns: Array<() => void> = []\n\n    // 앵커 하이퍼링크 설정\n    const setupSmoothScroll = () => {\n      const anchors = document.querySelectorAll('a[href^=\"#\"]')\n      const clickHandler = (e: Event) => {\n        e.preventDefault()\n        const anchor = e.currentTarget as HTMLAnchorElement\n        const targetId = anchor.getAttribute('href')\n        if (!targetId) return\n        document.querySelector(escapeID(decodeURI(targetId)))?.scrollIntoView({\n          behavior: 'smooth'\n        })\n      }\n      anchors.forEach(anchor => {\n        anchor.addEventListener('click', clickHandler)\n      })\n      cleanupFns.push(() => {\n        anchors.forEach(anchor => {\n          anchor.removeEventListener('click', clickHandler)\n        })\n      })\n    }\n\n    // Intersection Observer\n    const setupIntersectionObserver = () =>  {\n      const tocLinks = document.querySelectorAll('#toc-wrapper a:not(.anchor)')\n      const headers = document.querySelectorAll('#post-wrapper :is(h1[id], h2[id], h3[id]):not(blockquote *)')\n      const visibleBools: boolean[] = Array(headers.length).fill(false)\n\n      if (tocLinks.length === headers.length && tocLinks.length > 0) {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            const idxAttr = entry.target.getAttribute('idx')\n            const targetIdx = idxAttr !== null ? parseInt(idxAttr) : null\n            if (targetIdx !== null && !isNaN(targetIdx)) {\n              visibleBools[targetIdx] = entry.isIntersecting\n            }\n          })\n          \n          let anchorFlag = false\n          tocLinks.forEach((link, i) => {\n            if (visibleBools[i] && !anchorFlag) {\n              link.classList.add('visible')\n              anchorFlag = true\n            } else {\n              link.classList.remove('visible')\n            }\n          })\n\n          options?.onVisibilityChange?.(visibleBools)\n        }, {\n          root: null,\n          rootMargin: '-110px 0px 0px 0px'\n        })\n\n        headers.forEach((header, idx) => {\n          header.setAttribute('idx', idx.toString())\n          observer.observe(header)\n        })\n        cleanupFns.push(() => observer.disconnect())\n      }\n    }\n\n    // 적용\n    setupSmoothScroll()\n    setupIntersectionObserver()\n\n    // 언마운트 함수\n    return () => {\n      cleanupFns.forEach(cleanup => cleanup())\n    }\n  })\n}","import React from 'react'\nimport { graphql, HeadFC, PageProps } from 'gatsby'\nimport Layout from '@/components/Layout'\nimport { Container } from '@chakra-ui/react'\nimport PostLayout from '@/components/PostLayout'\n\nconst Post: React.FC<PageProps<Queries.BlogPostPageQuery>> = ({ data }) => {\n  return (\n    <Layout enableSearch={false}>\n      <Container maxW='3xl'>\n        <PostLayout post={data} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const Head: HeadFC<Queries.BlogPostPageQuery> = ({ data, location }) => {\n  if (!data.post) { return <></> }\n  const siteUrl = data.site?.siteMetadata?.siteUrl\n  const title = data.post.frontmatter.title\n  const description = data.post.frontmatter.description\n  return (\n    <>\n      <title>{title}</title>\n      {description && <meta name='description' content={description} />}\n      {siteUrl && <link rel='canonical' href={`${siteUrl}${location.pathname}`} />}\n      <meta property=\"og:title\" content={title} />\n      {description && <meta property=\"og:description\" content={description} />}\n      {siteUrl && <meta property=\"og:url\" content={`${siteUrl}${location.pathname}`} />}\n      <meta property=\"og:type\" content=\"article\" />\n    </>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostPage(\n    $id: String!\n    $series: String\n  ) {\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 200, truncate: true)\n      html\n      frontmatter {\n        slug\n        title\n        description\n        createAt(formatString: \"YYYY. MM. DD.\")\n        updateAt(formatString: \"YYYY. MM. DD. hh:mm\")\n        category\n        tags\n        series\n      }\n      tableOfContents\n    }\n    seriesList: allMarkdownRemark(\n      sort: { frontmatter: { createAt: ASC } }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        frontmatter {\n          slug\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`"],"names":["useRecipeResult","PropsProvider","key","Separator","forwardRef","props","ref","styles","className","otherProps","orientation","jsx","span","role","is","omit","cx","css","postTitleStyle","fontSize","wordBreak","marginTop","lineHeight","md","postDateStyle","color","_ref","frontmatter","fm","React","Box","Text","fontWeight","category","Heading","title","Stack","direction","createAt","updateAt","Show","when","fallback","children","result","isValidElement","Fragment","wrapperStyle","border","borderColor","padding","seriesTitleStyle","backgroundColor","width","seriesLinkStyle","whiteSpace","overflow","textOverflow","display","cursor","transition","_hover","seriesList","allPage","Math","ceil","nodes","length","page","setPage","useState","paginatedPosts","useMemo","calculatePaginatedPosts","_toConsumableArray","useEffect","i","slug","floor","gap","series","map","alignItems","Icon","as","FaAngleDoubleRight","onClick","location","href","HStack","justifyContent","IconButton","size","rounded","variant","FaArrowLeft","FaArrowRight","tocWrapperStyle","position","height","left","marginLeft","tocStyle","paddingInlineStart","marginBlockStart","toc","hideBelow","top","id","dangerouslySetInnerHTML","__html","y","e","host","repo","o","repoId","r","n","categoryId","u","mapping","s","term","a","strict","d","reactionsEnabled","f","emitMetadata","m","inputPosition","c","theme","p","lang","l","loading","g","t","x","then","repoid","categoryid","reactionsenabled","emitmetadata","inputposition","GiscusWidget","colorMode","useColorMode","Giscus","post","data","html","tableOfContents","options","cleanupFns","setupSmoothScroll","anchors","document","querySelectorAll","clickHandler","_document$querySelect","preventDefault","targetId","currentTarget","getAttribute","querySelector","decodeURI","replace","scrollIntoView","behavior","forEach","anchor","addEventListener","push","removeEventListener","setupIntersectionObserver","tocLinks","headers","visibleBools","Array","fill","observer","IntersectionObserver","entries","_options$onVisibility","entry","idxAttr","target","targetIdx","parseInt","isNaN","isIntersecting","anchorFlag","link","classList","add","remove","onVisibilityChange","call","root","rootMargin","header","idx","setAttribute","toString","observe","disconnect","cleanup","PostHeader","marginY","SeriesIndexList","TOC","MarkdownStyle","Profile","Layout","enableSearch","Container","maxW","PostLayout","Head","_ref2","_data$site","_data$site$siteMetada","siteUrl","site","siteMetadata","description","name","content","rel","pathname","property"],"sourceRoot":""}